# TODO:
# * if dla postgres/mysql
# * if dla centosa
---
- hosts: otrs
  gather_facts: no

  vars:
    otrs_version: 5.0.13
    database: postgres
    password_db: password

  pre_tasks:
    - name: 'Installing all dependencies on remote host for ansible'
      raw: sudo apt-get -y install python-simplejson aptitude python-psycopg2 libpq-dev
      # when: ansible_os_family == "Debian"

  tasks:
    - name: 'Upgrade and Update system repositories'
      apt: upgrade=yes update_cache=yes
      become: true

    - name: 'Download OTRS'
      get_url:
        url: http://ftp.otrs.org/pub/otrs/otrs-{{ otrs_version }}.tar.gz
        dest: /tmp
      become: true

    - name: 'Unpack OTRS archive'
      shell:
        cmd: tar -xzf otrs-{{ otrs_version }}.tar.gz
        chdir: /tmp
      become: true

    - name: 'Remove OTRS archive'
      file:
        path: /tmp/otrs-{{ otrs_version }}.tar.gz
        state: absent
      become: true

    - name: 'Move OTRS 5 folder to /opt/otrs'
      shell:
        cmd: mv otrs-{{ otrs_version }}/ /opt/otrs
        chdir: /tmp
      become: true

    - name: 'Install perl dependencies'
      apt: name={{ item }} state=installed
      with_items:
          - libapache2-mod-perl2
          - libdbd-mysql-perl
          - libtimedate-perl
          - libnet-dns-perl
          - libnet-ldap-perl
          - libio-socket-ssl-perl
          - libpdf-api2-perl
          - libdbd-mysql-perl
          - libsoap-lite-perl
          - libtext-csv-xs-perl
          - libjson-xs-perl
          - libapache-dbi-perl
          - libxml-libxml-perl
          - libxml-libxslt-perl
          - libyaml-perl
          - libarchive-zip-perl
          - libcrypt-eksblowfish-perl
          - libencode-hanextra-perl
          - libmail-imapclient-perl
          - libtemplate-perl
          - libcrypt-ssleay-perl
          - libdbd-odbc-perl
          - libdbd-pg-perl
      become: true

    - name: 'Install database'
      apt:
        name: postgresql,postgresql-contrib
      become: true

    - name: 'Install Apache'
      apt:
        name: apache2
      become: true

    - name: 'Install utils'
      apt:
        name: vim,htop
      become: true

    - name: 'Enable Apache modules'
      command: "{{ item }}"
      with_items:
        - a2enmod perl
        - a2enmod deflate
        - a2enmod filter
        - a2enmod headers
      become: true

    - name: 'Check Perl modules'
      command: perl /opt/otrs/bin/otrs.CheckModules.pl
      become: true
      register: perl

    - debug: var=perl.stdout_lines

    - name: 'Create user OTRS'
      user: name=otrs shell=/bin/bash home=/opt/otrs
      become: true

    - name: 'Add otrs user to www-data group'
      command: usermod -G www-data otrs
      become: true

    - name: 'Copy Config.pm'
      shell:
        cmd: cp Kernel/Config.pm.dist Kernel/Config.pm
        chdir: /opt/otrs
      become: true

    - name: 'Create site config for Apache'
      file:
        src: /opt/otrs/scripts/apache2-httpd.include.conf
        dest: /etc/apache2/sites-available/zzz_otrs.conf
        state: link
      become: true

    - name: 'Enable apache site'
      command: a2ensite zzz_otrs.conf
      become: true

    - name: 'Restart apache'
      service: name=apache2 state=restarted
      become: true

    - name: 'Set proper permissions in /opt/otrs folder'
      shell:
        cmd: bin/otrs.SetPermissions.pl --web-group=www-data
        chdir: /opt/otrs
      become: true

    - name: 'Create otrs user in database'
      postgresql_user: user=otrs password={{ password_db }}
      become: true
      become_user: postgres

    - name: 'Create otrs database'
      postgresql_db: name=otrs
      become: true
      become_user: postgres

    - name: 'Grant all privilages to otrs DB for otrs user'
      postgresql_privs: >
        db=otrs
        privs=ALL
        type=database
        role=otrs
      become: true
      become_user: postgres
